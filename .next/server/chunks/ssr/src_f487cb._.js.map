{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/dineshyadav/Development/Next/port/src/components/Input.tsx"],"sourcesContent":["import React, { ChangeEvent } from 'react';\n\ninterface InputProps {\n    title: string;\n    titleClass?: string;\n    type?: 'text' | 'email' | 'password' | 'number' | 'textarea'; // Include 'textarea' as an option\n    placeholder: string;\n    rows?: number; // Optional, relevant for textarea only\n    value: string;\n    className?: string;\n    onChange: (e: ChangeEvent<HTMLTextAreaElement | HTMLInputElement>) => void; // Accepts both types\n}\n\nconst Input = ({ \n    title, \n    titleClass, \n    type = 'text', \n    placeholder, \n    rows, \n    value, \n    className, \n    onChange \n}: InputProps) => {\n    const isTextarea = type === 'textarea'; // Check if it should render a textarea\n\n    return (\n        <div className=\"w-full\">\n            <label className={`text-lg font-bold ${titleClass}`}>{title}</label>\n            {isTextarea ? (\n                <textarea\n                    placeholder={placeholder}\n                    rows={rows} // Applicable for textarea\n                    value={value}\n                    onChange={onChange} // Correctly typed\n                    className={`w-full px-2 py-2 border bg-zinc-900 border-zinc-700 rounded-lg focus:outline-none mt-1 focus:border-[#7842BF] ${className}`}\n                />\n            ) : (\n                <input\n                    type={type}\n                    placeholder={placeholder}\n                    value={value}\n                    onChange={onChange} // Correctly typed\n                    className={`w-full px-2 py-2 border bg-zinc-900 border-zinc-700 rounded-lg focus:outline-none mt-1 focus:border-[#7842BF] ${className}`}\n                />\n            )}\n        </div>\n    );\n};\n\nexport default Input;\n"],"names":[],"mappings":";;;;;AAaA,MAAM,QAAQ,CAAC,EACX,KAAK,EACL,UAAU,EACV,OAAO,MAAM,EACb,WAAW,EACX,IAAI,EACJ,KAAK,EACL,SAAS,EACT,QAAQ,EACC;IACT,MAAM,aAAa,SAAS,YAAY,uCAAuC;IAE/E,qBACI,8OAAC;QAAI,WAAU;;0BACX,8OAAC;gBAAM,WAAW,CAAC,kBAAkB,EAAE,YAAY;0BAAG;;;;;;YACrD,2BACG,8OAAC;gBACG,aAAa;gBACb,MAAM;gBACN,OAAO;gBACP,UAAU;gBACV,WAAW,CAAC,8GAA8G,EAAE,WAAW;;;;;qCAG3I,8OAAC;gBACG,MAAM;gBACN,aAAa;gBACb,OAAO;gBACP,UAAU;gBACV,WAAW,CAAC,8GAA8G,EAAE,WAAW;;;;;;;;;;;;AAK3J;uCAEe"}},
    {"offset": {"line": 54, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 60, "column": 0}, "map": {"version":3,"sources":["file:///Users/dineshyadav/Development/Next/port/src/components/ContactForm.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { useState } from \"react\";\nimport Input from \"@/components/Input\";\n\ninterface ContactFormProps {\n  endpoint: string; \n  successMessage?: string;\n  subject?: string; \n  template?: string;\n}\n\nconst ContactForm: React.FC<ContactFormProps> = ({\n  endpoint,\n  successMessage = \"Message sent successfully!\",\n  subject = \"New Contact Form Submission\",\n  template = \"table\",\n}) => {\n  const [email, setEmail] = useState<string>(\"\");\n  const [name, setName] = useState<string>(\"\");\n  const [message, setMessage] = useState<string>(\"\");\n  const [error, setError] = useState<string>(\"\");\n\n  // Handlers for input changes\n  const handleEmailChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n    setEmail(e.target.value);\n  };\n\n  const handleNameChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n    setName(e.target.value);\n  };\n\n  const handleMessageChange = (e: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>) => {\n    setMessage(e.target.value);\n  };\n\n  // Form submission handler\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n\n    try {\n      const response = await fetch(endpoint, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\",\n        },\n        body: JSON.stringify({\n          email,\n          name,\n          message,\n          _subject: subject,\n          _template: template,\n        }),\n      });\n\n      const data = await response.json();\n\n      if (data.success) {\n        setEmail(\"\");\n        setName(\"\");\n        setMessage(\"\");\n        setError(successMessage);\n      } else {\n        setError(\"Failed to send message. Please try again.\");\n      }\n    } catch (error) {\n      console.error(\"Error sending email:\", error);\n      setError(`An error occurred while sending your message. Please try again later.`);\n    }\n  };\n\n  // Check if the form is valid\n  const isFormValid = email && name && message;\n\n  return (\n    <form onSubmit={handleSubmit} className=\"px-2 py-5 text-sm\">\n      <Input\n        title=\"Email\"\n        titleClass=\"text-sm\"\n        type=\"email\"\n        placeholder=\"Your@email.com\"\n        value={email}\n        onChange={handleEmailChange}\n        className=\"mb-4\"\n      />\n      <Input\n        title=\"Name\"\n        titleClass=\"text-sm\"\n        type=\"text\"\n        placeholder=\"Your name\"\n        value={name}\n        onChange={handleNameChange}\n        className=\"mb-4\"\n      />\n      <Input\n        title=\"Message\"\n        titleClass=\"text-sm\"\n        type=\"textarea\"\n        rows={4}\n        placeholder=\"Your message\"\n        value={message}\n        onChange={handleMessageChange}\n        className=\"mb-4\"\n      />\n      {error && (\n        <p className={`text-sm ${error.includes(\"successfully\") ? \"text-green-500\" : \"text-red-500\"}`}>\n          {error}\n        </p>\n      )}\n      <button\n        type=\"submit\"\n        disabled={!isFormValid}\n        className=\"w-full py-2 px-4 mt-6 bg-[#7842BF] text-white rounded-lg disabled:opacity-50 disabled:cursor-not-allowed\"\n      >\n        Send Message\n      </button>\n    </form>\n  );\n};\n\nexport default ContactForm;\n"],"names":[],"mappings":";;;;AAEA;AACA;AAHA;;;;AAYA,MAAM,cAA0C,CAAC,EAC/C,QAAQ,EACR,iBAAiB,4BAA4B,EAC7C,UAAU,6BAA6B,EACvC,WAAW,OAAO,EACnB;IACC,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAU;IAC3C,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAU;IACzC,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAU;IAC/C,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAU;IAE3C,6BAA6B;IAC7B,MAAM,oBAAoB,CAAC;QACzB,SAAS,EAAE,MAAM,CAAC,KAAK;IACzB;IAEA,MAAM,mBAAmB,CAAC;QACxB,QAAQ,EAAE,MAAM,CAAC,KAAK;IACxB;IAEA,MAAM,sBAAsB,CAAC;QAC3B,WAAW,EAAE,MAAM,CAAC,KAAK;IAC3B;IAEA,0BAA0B;IAC1B,MAAM,eAAe,OAAO;QAC1B,EAAE,cAAc;QAEhB,IAAI;YACF,MAAM,WAAW,MAAM,MAAM,UAAU;gBACrC,QAAQ;gBACR,SAAS;oBACP,gBAAgB;oBAChB,QAAQ;gBACV;gBACA,MAAM,KAAK,SAAS,CAAC;oBACnB;oBACA;oBACA;oBACA,UAAU;oBACV,WAAW;gBACb;YACF;YAEA,MAAM,OAAO,MAAM,SAAS,IAAI;YAEhC,IAAI,KAAK,OAAO,EAAE;gBAChB,SAAS;gBACT,QAAQ;gBACR,WAAW;gBACX,SAAS;YACX,OAAO;gBACL,SAAS;YACX;QACF,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,wBAAwB;YACtC,SAAS,CAAC,qEAAqE,CAAC;QAClF;IACF;IAEA,6BAA6B;IAC7B,MAAM,cAAc,SAAS,QAAQ;IAErC,qBACE,8OAAC;QAAK,UAAU;QAAc,WAAU;;0BACtC,8OAAC,2HAAA,CAAA,UAAK;gBACJ,OAAM;gBACN,YAAW;gBACX,MAAK;gBACL,aAAY;gBACZ,OAAO;gBACP,UAAU;gBACV,WAAU;;;;;;0BAEZ,8OAAC,2HAAA,CAAA,UAAK;gBACJ,OAAM;gBACN,YAAW;gBACX,MAAK;gBACL,aAAY;gBACZ,OAAO;gBACP,UAAU;gBACV,WAAU;;;;;;0BAEZ,8OAAC,2HAAA,CAAA,UAAK;gBACJ,OAAM;gBACN,YAAW;gBACX,MAAK;gBACL,MAAM;gBACN,aAAY;gBACZ,OAAO;gBACP,UAAU;gBACV,WAAU;;;;;;YAEX,uBACC,8OAAC;gBAAE,WAAW,CAAC,QAAQ,EAAE,MAAM,QAAQ,CAAC,kBAAkB,mBAAmB,gBAAgB;0BAC1F;;;;;;0BAGL,8OAAC;gBACC,MAAK;gBACL,UAAU,CAAC;gBACX,WAAU;0BACX;;;;;;;;;;;;AAKP;uCAEe"}},
    {"offset": {"line": 189, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 195, "column": 0}, "map": {"version":3,"sources":["file:///Users/dineshyadav/Development/Next/port/src/components/Header.tsx"],"sourcesContent":["import React from 'react'\n\ninterface HeaderProps {\n    title: string,\n    titleClass?: string,\n    title2: string,\n    title2Class?: string\n}\n\nfunction Header({title, titleClass, title2, title2Class}: HeaderProps): React.ReactElement {\n  return (\n    <h5 className={`font-outfit uppercase lg:text-8xl font-bold ${titleClass || ''}`}>\n        {title}<br /> \n        <span className={`text-[#7842BF] uppercase opacity-70 ${title2Class || ''}`}>{title2}</span>\n    </h5>\n  )\n}\n\nexport default Header"],"names":[],"mappings":";;;;;AASA,SAAS,OAAO,EAAC,KAAK,EAAE,UAAU,EAAE,MAAM,EAAE,WAAW,EAAc;IACnE,qBACE,8OAAC;QAAG,WAAW,CAAC,4CAA4C,EAAE,cAAc,IAAI;;YAC3E;0BAAM,8OAAC;;;;;0BACR,8OAAC;gBAAK,WAAW,CAAC,oCAAoC,EAAE,eAAe,IAAI;0BAAG;;;;;;;;;;;;AAGtF;uCAEe"}},
    {"offset": {"line": 226, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 232, "column": 0}, "map": {"version":3,"sources":["file:///Users/dineshyadav/Development/Next/port/src/components/Experience.tsx"],"sourcesContent":["\"use client\";\nimport React, { useState } from 'react';\nimport Headers from '@/components/Header';\n\ninterface ExperienceData {\n    name: string;\n    description: string[];\n    date: string;\n}\n\nconst Experience: React.FC = () => {\n    const [hoveredIndex, setHoveredIndex] = useState<number | null>(null);\n\n    return (\n        <div>\n            <Headers title=\"Previous\" title2=\"Experiences\" />\n            <div className=\"flex font-outfit mt-10 flex-col gap-3 lg:mr-[30%]\">\n                {data.map((item, index) => (\n                    <div \n                        key={index} \n                        onMouseEnter={() => setHoveredIndex(index)}\n                        onMouseLeave={() => setHoveredIndex(null)} \n                        className={`px-7 py-3 rounded-xl flex hoveredIndex ${hoveredIndex === index ? 'text-white bg-primary duration-200 delay-75' : 'bg-zinc-800'}`}>\n                        <div>\n                            <h1 className={`text-white py-2 font-bold ${hoveredIndex === index ? \"text-4xl duration-200\" : \"text-3xl\"}`}>{item.name}</h1>\n                            {item.description.map((desc, descIndex) => (\n                                <p className='text-white font-medium text-sm pr-10' key={descIndex}>• {desc}</p>\n                            ))}\n                            <h1 className='text-white mt-3 text-sm'>{item.date}</h1>\n                        </div>\n                    </div>\n                ))}\n            </div>\n        </div>\n    );\n}\n\nexport default Experience;\n\nconst data: ExperienceData[] = [\n    {\n        name: \"Synergy Retail\",\n        description: [\n            \"Independently developed and managed the Node.js server, crafting over 21 APIs to enhance server functionality and performance.\",\n            \"Single-handedly led the development of a Multi-Screen React Native application, with complex data transformation functions demonstrating proficiency in UI development and functionality.\",\n            \"Implemented nested navigation, complex visualisations, custom drawers and essential UI components, including modals, and filters for alarms, to enhance the user experience.\",\n        ],\n        date: \"Oct 2023 - Present\",\n    },\n    {\n        name: \"Coding Junior\",\n        description: [\n            \"Built 2 scalable, end-to-end, and user-friendly web applications that simplify data collection for placing orders, managing & confirming orders. Other features include: Dynamic Invoice Numbering to handle concurrency, Dynamic Invoice PDF Generation and CRUD functionality for Admin functions.\",\n        ],\n        date: \"Jul 2022 - Sep\",\n    },\n];\n"],"names":[],"mappings":";;;;AACA;AACA;AAFA;;;;AAUA,MAAM,aAAuB;IACzB,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAiB;IAEhE,qBACI,8OAAC;;0BACG,8OAAC,4HAAA,CAAA,UAAO;gBAAC,OAAM;gBAAW,QAAO;;;;;;0BACjC,8OAAC;gBAAI,WAAU;0BACV,KAAK,GAAG,CAAC,CAAC,MAAM,sBACb,8OAAC;wBAEG,cAAc,IAAM,gBAAgB;wBACpC,cAAc,IAAM,gBAAgB;wBACpC,WAAW,CAAC,uCAAuC,EAAE,iBAAiB,QAAQ,gDAAgD,eAAe;kCAC7I,cAAA,8OAAC;;8CACG,8OAAC;oCAAG,WAAW,CAAC,0BAA0B,EAAE,iBAAiB,QAAQ,0BAA0B,YAAY;8CAAG,KAAK,IAAI;;;;;;gCACtH,KAAK,WAAW,CAAC,GAAG,CAAC,CAAC,MAAM,0BACzB,8OAAC;wCAAE,WAAU;;4CAAuD;4CAAG;;uCAAd;;;;;8CAE7D,8OAAC;oCAAG,WAAU;8CAA2B,KAAK,IAAI;;;;;;;;;;;;uBATjD;;;;;;;;;;;;;;;;AAgB7B;uCAEe;AAEf,MAAM,OAAyB;IAC3B;QACI,MAAM;QACN,aAAa;YACT;YACA;YACA;SACH;QACD,MAAM;IACV;IACA;QACI,MAAM;QACN,aAAa;YACT;SACH;QACD,MAAM;IACV;CACH"}},
    {"offset": {"line": 331, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}